import './index.svelte.css.proxy.js';
/* src/routes/index.svelte generated by Svelte v3.32.0 */
import {
	create_ssr_component,
	each,
	escape,
	missing_component,
	set_store_value,
	subscribe,
	validate_component
} from "../../_snowpack/pkg/svelte/internal.js";

import { session } from "../assets/runtime/app/stores.js";
import { _ } from "../../_snowpack/pkg/lodash.js";
import Slider from "../../_components/Slider.svelte.js";

const css = {
	code: "img.svelte-1t6ndzl{border-radius:25px}.transparent.svelte-1t6ndzl{border:transparent;background-color:transparent}.pid.svelte-1t6ndzl{background-color:#FF4D4D;border-radius:0.5em;padding:2px;color:white;font-size:calc(100% + 1.1vw)}.image-overlay.svelte-1t6ndzl{width:50%;position:absolute;top:25%;right:0;bottom:25%;left:0;padding:1rem;border-radius:calc(.25rem - 1px)}",
	map: "{\"version\":3,\"file\":\"index.svelte\",\"sources\":[\"index.svelte\"],\"sourcesContent\":[\"<script>\\n  import { session } from \\\"$app/stores\\\";\\n  import { _ } from \\\"lodash\\\";\\n  import Slider from \\\"../components/Slider.svelte\\\";\\n\\n  let KE_PIDS = $session.constants.KE_PID;\\n  $: views = $session.configuration.views;\\n\\n  function toggleEnabled( id ) {\\n    fetch(\\\"./api/config\\\", {\\n        method : \\\"PUT\\\",\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body   : JSON.stringify({id: id})\\n    }).then(d => d.json())\\n    .then(d => {\\n      console.log(d)\\n      if ( !_.isEqual( views, d.views )) {\\n        views = d.views.views;\\n        $session.configuration.views = d.views.views;\\n      }\\n      $session.actions = [{\\n        id    : $session.count,\\n        msg   : d.message,\\n        theme : d.ret ? 'alert-info' : 'alert-warning',\\n      }, ...$session.actions];\\n    });\\n  }\\n</script>\\n\\n{#if views}\\n  {#each Object.keys(views) as id }\\n    <div class=\\\"container col-sm-10 col-md-6 pr-4 pl-4\\\">\\n\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"text-left col-6\\\">\\n          <h5>{views[id].name}</h5>\\n        </div>\\n        <div class=\\\"text-right col-6\\\">\\n          <svelte:component this={Slider} callback={toggleEnabled} callbackArgs={id} checked={views[id].enabled} />\\n        </div>\\n      </div>\\n\\n      <a href=\\\"/edit/{id}\\\">\\n\\n        <div class=\\\"card transparent\\\">\\n          <img class=\\\"card-img-top\\\" src=\\\"images/Background/{views[id].background}\\\" alt=\\\"view background\\\">\\n\\n          <div class=\\\"row card-img-overlay\\\">\\n\\n            <div class=\\\"col-6 text-left\\\">\\n              <img class=\\\"image-overlay\\\" src=\\\"images/{views[id].theme}/needle.png\\\">\\n              <img class=\\\"image-overlay\\\" src=\\\"images/{views[id].theme}/gauge.png\\\">\\n            </div>\\n\\n            <div class=\\\"col-6 d-flex flex-column justify-content-center\\\">\\n              {#each views[id].gauges as gauge}\\n                {#if gauge && gauge.pid}\\n                  <div class=\\\"text-center\\\">\\n                    <p class=\\\"pid\\\">{ KE_PIDS[ gauge.pid ].shortName ? KE_PIDS[ gauge.pid ].shortName : KE_PIDS[ gauge.pid ].name }</p>\\n                  </div>\\n                {/if}\\n              {/each}\\n            </div>\\n\\n          </div>\\n        </div>\\n      </a>\\n    </div>\\n  {/each}\\n{/if}\\n\\n<style>\\n  img {\\n    border-radius: 25px;\\n  }\\n  .transparent {\\n    border: transparent;\\n    background-color: transparent;\\n  }\\n\\n  .pid {\\n    background-color: #FF4D4D;\\n    border-radius: 0.5em;\\n    padding: 2px;\\n    color: white;\\n    font-size:calc(100% + 1.1vw);\\n  }\\n\\n  .image-overlay {\\n    width: 50%;\\n    position: absolute;\\n    top: 25%;\\n    right: 0;\\n    bottom: 25%;\\n    left: 0;\\n    padding: 1rem;\\n    border-radius: calc(.25rem - 1px);\\n  }\\n</style>\\n\"],\"names\":[],\"mappings\":\"AA0EE,GAAG,eAAC,CAAC,AACH,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,YAAY,eAAC,CAAC,AACZ,MAAM,CAAE,WAAW,CACnB,gBAAgB,CAAE,WAAW,AAC/B,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,KAAK,CACpB,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,KAAK,CACZ,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,AAC9B,CAAC,AAED,cAAc,eAAC,CAAC,AACd,KAAK,CAAE,GAAG,CACV,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,GAAG,CACX,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,AACnC,CAAC\"}"
};

const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let views;
	let $session, $$unsubscribe_session;
	$$unsubscribe_session = subscribe(session, value => $session = value);
	session.subscribe($$value => $session = $$value);
	let KE_PIDS = $session.constants.KE_PID;

	function toggleEnabled(id) {
		fetch("./api/config", {
			method: "PUT",
			headers: { "Content-Type": "application/json" },
			body: JSON.stringify({ id })
		}).then(d => d.json()).then(d => {
			console.log(d);

			if (!_.isEqual(views, d.views)) {
				views = d.views.views;
				set_store_value(session, $session.configuration.views = d.views.views, $session);
			}

			set_store_value(
				session,
				$session.actions = [
					{
						id: $session.count,
						msg: d.message,
						theme: d.ret ? "alert-info" : "alert-warning"
					},
					...$session.actions
				],
				$session
			);
		});
	}

	$$result.css.add(css);
	views = $session.configuration.views;
	$$unsubscribe_session();

	return `${views
	? `${each(Object.keys(views), id => `<div class="${"container col-sm-10 col-md-6 pr-4 pl-4"}"><div class="${"row m-2"}"><div class="${"text-left col-6"}"><h5>${escape(views[id].name)}</h5></div>
        <div class="${"text-right col-6"}">${validate_component(Slider || missing_component, "svelte:component").$$render(
			$$result,
			{
				callback: toggleEnabled,
				callbackArgs: id,
				checked: views[id].enabled
			},
			{},
			{}
		)}
        </div></div>

      <a href="${"/edit/" + escape(id)}"><div class="${"card transparent svelte-1t6ndzl"}"><img class="${"card-img-top svelte-1t6ndzl"}" src="${"images/Background/" + escape(views[id].background)}" alt="${"view background"}">

          <div class="${"row card-img-overlay"}"><div class="${"col-6 text-left"}"><img class="${"image-overlay svelte-1t6ndzl"}" src="${"images/" + escape(views[id].theme) + "/needle.png"}">
              <img class="${"image-overlay svelte-1t6ndzl"}" src="${"images/" + escape(views[id].theme) + "/gauge.png"}"></div>

            <div class="${"col-6 d-flex flex-column justify-content-center"}">${each(views[id].gauges, gauge => `${gauge && gauge.pid
		? `<div class="${"text-center"}"><p class="${"pid svelte-1t6ndzl"}">${escape(KE_PIDS[gauge.pid].shortName
			? KE_PIDS[gauge.pid].shortName
			: KE_PIDS[gauge.pid].name)}</p>
                  </div>`
		: ``}`)}
            </div></div>
        </div></a>
    </div>`)}`
	: ``}`;
});

export default Routes;
//# sourceMappingURL=index.svelte.js.map
