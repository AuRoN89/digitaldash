"use strict";var e=require("./app.js"),n=require("./stores.js"),a=require("./Slider.svelte.js");require("@sveltejs/kit/dist/renderer"),require("fs"),require("child_process");const l={code:".alertContainer.svelte-19k1p7q{padding:5px;margin:5px;border-radius:0.5em;border:grey;border-width:1px;border-style:solid}.delete.svelte-19k1p7q{background-color:rgb(220, 176, 176)}",map:'{"version":3,"file":"[slug].svelte","sources":["[slug].svelte"],"sourcesContent":["<script context=\\"module\\">\\n  export async function preload({ params, query }) {\\n    console.log(\\"params\\"+query)\\n    return { id: params.slug };\\n  }\\n<\/script>\\n\\n<script>\\n  import { session } from \\"$app/stores\\";\\n  import Slider from \\"../../components/Slider.svelte\\";\\n\\n  export let id;\\n  let configuration = $session.configuration;\\n  console.log(configuration)\\n  console.log(id)\\n\\n  let actions  = [];\\n  let view     = configuration.views[id];\\n  const KE_PID = $session.constants.KE_PID;\\n  const pids   = Object.keys( KE_PID );\\n\\n  function normalizeGauges() {\\n    // Ensure we always have 3 entries in our array\\n    while ( view.gauges.length != 3 ) {\\n      view.gauges.push({\\n        \\"module\\"      : \\"\\",\\n        \\"themeConfig\\" : \\"\\",\\n        \\"unit\\"        : \\"\\",\\n        \\"path\\"        : \\"\\",\\n        \\"pid\\"         : \\"\\"\\n      });\\n    }\\n  }\\n  normalizeGauges();\\n\\n  function pidChange( node ) {\\n    function getUnits( node ) {\\n      const pid = node.target.value;\\n\\n      // find our units for the provided pid\\n      let unitsSelect = node.srcElement.parentElement.nextSibling.nextSibling.querySelectorAll(\'[name=units]\')[0]\\n      // Clear our old units from units select input\\n      let i = 0;\\n      for (i = 0; i < unitsSelect.options.length; i++) {\\n        unitsSelect.remove(i);\\n      }\\n\\n      if ( !pid ) {\\n        unitsSelect.options[0] = new Option(\'-\', \'\', false, false);\\n        return;\\n      }\\n      // Add our units to our select input\\n      KE_PID[pid].units.forEach((unit, i) => {\\n        unitsSelect.options[i] = new Option(unit, unit, false, false);\\n      });\\n      // Actually set the select value to the first unit\\n      unitsSelect.value = unitsSelect.options[0].value;\\n      unitsSelect.focus();\\n      unitsSelect.blur();\\n    }\\n    node.addEventListener( \\"change\\", getUnits );\\n    // Set our initial values\\n    var event = new Event(\'change\');\\n    node.dispatchEvent( event );\\n\\n    return {\\n      destroy() {\\n        node.removeEventListener( \\"blur\\", getUnits );\\n      }\\n    }\\n  }\\n\\n  function handleSubmit(event) {\\n    // Here we need to sanitize our input :/\\n    let gauges = [];\\n    view.gauges.forEach( (gauge, i) => {\\n      if ( !gauge.pid || !gauge.unit ) {\\n        return;\\n      }\\n      else {\\n        gauges.push({\\n          \\"module\\"      : \\"Radial\\",\\n          \\"themeConfig\\" : \\"120\\",\\n          \\"unit\\"        : gauge.unit,\\n          \\"path\\"        : \\"/\\"+view.theme+\\"/\\",\\n          \\"pid\\"         : gauge.pid\\n        });\\n      }\\n    });\\n\\n    // We don\'t want to mutate view here as we do some gauge [] fanagling\\n    let temp_view           = view;\\n    temp_view.gauges        = gauges;\\n    configuration.views[id] = temp_view;\\n\\n    fetch(\\"/api/config\\", {\\n        method : \\"POST\\",\\n        body   : JSON.stringify( configuration )\\n      })\\n      .then(d => d.json())\\n      .then(d => {\\n        $session.configuration = d.config;\\n        normalizeGauges();\\n\\n        $session.actions = [{\\n          id    : $session.count,\\n          msg   : d.message,\\n          theme : d.ret ? \'alert-info\' : \'alert-warning\',\\n        }, ...$session.actions];\\n      });\\n  }\\n\\n  function addAlert() {\\n    view.alerts = [...view.alerts, {\\n      \\"message\\" : \\"\\",\\n      \\"op\\"      : \\"\\",\\n      \\"priority\\": \\"\\",\\n      \\"unit\\"    : \\"\\",\\n      \\"value\\"   : \\"\\",\\n    }];\\n  }\\n\\n  function removeAlert( index ) {\\n    let tempArr = view.alerts;\\n    tempArr.splice( index, 1 );\\n\\n    view.alerts = tempArr;\\n  }\\n\\n  function toggleDynamic() {\\n    view.dynamic.enabled = view.dynamic.enabled ? false : true;\\n  }\\n<\/script>\\n\\n<div class=\\"col-sm-12 col-sm-8 pb-4\\">\\n  {#if view}\\n  <div id=\\"edit-container\\" class=\\"container\\">\\n    <div class=\\"col-sm-12 order-sm-1\\">\\n      <h4 class=\\"mb-3\\">Editing view #{id}</h4>\\n      <form on:submit|preventDefault=\\"{handleSubmit}\\" class=\\"needs-validation\\">\\n        <input type=\\"hidden\\" value=\\"<%$id%>\\" name=\\"id\\"/>\\n\\n          <h4>Basics</h4>\\n          <hr/>\\n\\n        <div class=\\"basicsContainer\\">\\n          <div class=\\"row\\">\\n\\n            <div class=\\"col-12\\">\\n              <label for=\\"name\\">View name</label>\\n              <input bind:value={view.name} name=\\"name\\" type=\\"text\\" class=\\"form-control\\" id=\\"name\\" placeholder=\\"\\" required>\\n            </div>\\n\\n            <div class=\\"col-6\\">\\n              <label for=\\"background\\">Background</label>\\n              <select bind:value={view.background} name=\\"background\\" class=\\"custom-select form-control d-block w-100\\" id=\\"country\\" required>\\n                <option value=\\"\\">-</option>\\n                {#each [\'banner1.jpg\', \'bg.jpg\', \'BlackBackground.png\', \'CarbonFiber.png\'] as background}\\n                <option value={background}>{background}</option>\\n                {/each}\\n              </select>\\n            </div>\\n\\n            <div class=\\"col-6\\">\\n              <label for=\\"theme\\">Theme</label>\\n              <select bind:value={view.theme} name=\\"theme\\" class=\\"form-control d-block w-100\\" id=\\"theme\\" required>\\n                <option value=\\"\\">-</option>\\n                {#each [\'Stock\'] as theme}\\n                <option value={theme}>{theme}</option>\\n                {/each}\\n              </select>\\n            </div>\\n\\n            <div class=\\"col-12\\">\\n              <label for=\\"theme\\">Vehicle Parameters</label>\\n              <div class=\\"input-group\\">\\n                {#each Array(3) as _, i}\\n                  <div class=\\"col-4 pl-1 pr-1\\">\\n                    <div class=\\"col-12\\">\\n                      <select use:pidChange bind:value={view.gauges[i].pid} name=\\"pid{id}\\" class=\\"mb-2 form-control\\" id=\\"pid{id}\\">\\n                        <option value=\\"\\">-</option>\\n                        {#each pids as pid}\\n                          <option value={pid}>\\n                            {KE_PID[pid].shortName ? KE_PID[pid].shortName : KE_PID[pid].name}\\n                          </option>\\n                        {/each}\\n                      </select>\\n                    </div>\\n\\n                    \x3c!-- Units for PID --\x3e\\n                    <div class=\\"col-12\\">\\n                      <select name=\\"units\\" on:blur=\\"{ e => view.gauges[i].unit = e.target.value }\\" value={view.gauges[i].unit} class=\\"form-control\\"></select>\\n                    </div>\\n                  </div>\\n                {/each}\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n        \x3c!-- END BASICS --\x3e\\n\\n        <h4>Alerts</h4>\\n        <hr/>\\n\\n        <div class=\\"alertsContainer\\">\\n          {#each view.alerts as alert, i}\\n            <div class=\\"alertContainer\\">\\n\\n              <div class=\\"input-group\\">\\n                <div class=\\"col-sm-6 col-12 pl-1 pr-1\\">\\n                  <label class=\\"label\\" for=\\"alertMessage\\">Message</label>\\n                  <input required bind:value={alert.message} class=\\"value form-control\\" type=\\"text\\" name=\\"alertMessage\\"/>\\n                </div>\\n\\n                <div class=\\"col-sm-3 col-12 pl-1 pr-1\\">\\n                  <label class=\\"label\\" for=\\"alertValue\\">Value</label>\\n                  <input required bind:value={alert.value} class=\\"form-control\\" type=\\"text\\" name=\\"alertValue\\"/>\\n                </div>\\n\\n                <div class=\\"col-sm-3 col-12 pl-1 pr-1\\">\\n                  <label for=\\"alertOP\\">OP</label>\\n                  <select required bind:value={alert.op} name=\\"alertOP\\" class=\\"form-control\\">\\n                    <option value=\\"\\">-</option>\\n                    {#each [\'=\', \'>\', \'<\', \'>=\', \'<=\'] as op}\\n                    <option value={op}>\\n                      {op}\\n                    </option>\\n                    {/each}\\n                  </select>\\n                </div>\\n\\n                <div class=\\"col-sm-6 col-12 pl-1 pr-1\\">\\n                  <label class=\\"label\\" for=\\"alertPID\\">PID</label>\\n\\n                  <select use:pidChange bind:value={alert.pid} name=\\"pid{id}\\" class=\\"value form-control pl-1 pr-1\\" id=\\"alertPID\\" required>\\n                    <option value=\\"\\">-</option>\\n                    {#each pids as pid}\\n                      <option value={pid}>\\n                        {pid ? KE_PID[pid].shortName ? KE_PID[pid].shortName : KE_PID[pid].name : \'\'}\\n                      </option>\\n                    {/each}\\n                  </select>\\n                </div>\\n\\n                <div class=\\"col-sm-3 col-12 pl-1 pr-1\\">\\n                  <label class=\\"label\\" for=\\"alertUnit\\">Unit</label>\\n                  <select name=\\"units\\" on:blur=\\"{ e => alert.unit = e.target.value }\\" value={alert.unit} class=\\"form-control value\\" required><option>-</option></select>\\n                </div>\\n\\n                <div class=\\"col-sm-3 col-12 pl-1 pr-1\\">\\n                  <label class=\\"label\\" for=\\"alertPriority\\">Priority</label>\\n                  <input required bind:value={alert.priority} class=\\"value form-control\\" type=\\"number\\" name=\\"alertPriority\\"/>\\n                </div>\\n              </div>\\n\\n              <div class=\\"mt-2 text-center\\">\\n                <button on:click=\\"{() => {removeAlert( i )}}\\" class=\\"form-control delete\\" type=\\"button\\">Delete</button>\\n              </div>\\n            </div>\\n          {/each}\\n\\n          <div class=\\"col-sm-12 col-auto\\">\\n            <button class=\\"form-control\\" on:click={() => addAlert()}>New alert</button>\\n          </div>\\n        </div>\\n        \x3c!-- END ALERTS --\x3e\\n\\n        <h4>Dynamic</h4>\\n        <hr/>\\n\\n        <div class=\\"dynamicContainer\\">\\n          <div class=\\"row\\">\\n            <div class=\\"col-sm-3 col-12\\">\\n              <svelte:component this={Slider} callback={toggleDynamic} callbackArgs={null} checked={view.dynamic.enabled} />\\n            </div>\\n          </div>\\n          <div class=\\"row\\">\\n\\n            <div class=\\"col-sm-3 col-12\\">\\n              <label for=\\"dynamicPID\\">PID</label>\\n\\n              <select use:pidChange bind:value={view.dynamic.pid} disabled={!view.dynamic.enabled} name=\\"pid{id}\\" class=\\"form-control\\" id=\\"dynamicPID\\" required>\\n                <option value=\\"\\">-</option>\\n                {#each pids as pid}\\n                  <option value={pid}>\\n                    {KE_PID[pid].shortName ? KE_PID[pid].shortName : KE_PID[pid].name}\\n                  </option>\\n                {/each}\\n              </select>\\n            </div>\\n\\n            <div class=\\"col-sm-3 col-12\\">\\n              <label class=\\"label\\" for=\\"dynamicUnit\\">Unit</label>\\n              <select name=\\"units\\" disabled={!view.dynamic.enabled} on:blur=\\"{ e => view.dynamic.unit = e.target.value }\\" value={view.dynamic.unit} class=\\"form-control value\\" required><option>-</option></select>\\n            </div>\\n\\n            <div class=\\"col-sm-3 col-12\\">\\n              <label for=\\"dynamicValue\\">Value</label>\\n              <input bind:value={view.dynamic.value} disabled={!view.dynamic.enabled} class=\\"form-control\\" type=\\"text\\" name=\\"dynamicValue\\"/>\\n            </div>\\n\\n            <div class=\\"col-sm-3 col-12\\">\\n              <label for=\\"dynamicOP\\">OP</label>\\n              <select bind:value={view.dynamic.op} name=\\"dynamicOP\\" disabled={!view.dynamic.enabled} class=\\"form-control\\">\\n                <option value=\\"\\">-</option>\\n                {#each [\'=\', \'>\', \'<\', \'>=\', \'<=\'] as op}\\n                  <option value={op}>\\n                    {op}\\n                  </option>\\n                {/each}\\n              </select>\\n            </div>\\n\\n            <div class=\\"col-sm-3 col-12\\">\\n              <label for=\\"dynamicPriority\\">Priority</label>\\n              <input bind:value={view.dynamic.priority} disabled={!view.dynamic.enabled} class=\\"form-control\\" type=\\"number\\" name=\\"dynamicPriority\\"/>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n        <hr class=\\"mb-4\\">\\n        <button class=\\"btn btn-primary btn-lg btn-block\\" type=\\"submit\\">Update</button>\\n\\n      </form>\\n    </div>\\n  </div>\\n  {/if}\\n</div>\\n\\n<style>\\n  .basicsContainer {\\n    /* padding: 5px;\\n    border:turquoise;\\n    border-width: 2px;\\n    border-style: solid; */\\n  }\\n\\n  .alertsContainer {\\n    /* padding: 5px;\\n    border:rgb(101, 145, 140);\\n    border-width: 2px;\\n    border-style: solid; */\\n  }\\n\\n  .alertContainer {\\n    padding: 5px;\\n    margin: 5px;\\n    border-radius: 0.5em;\\n    border:grey;\\n    border-width: 1px;\\n    border-style: solid;\\n  }\\n\\n  .dynamicContainer {\\n    /* padding: 5px;\\n    border:rgb(104, 232, 104);\\n    border-width: 2px;\\n    border-style: solid; */\\n  }\\n\\n  .delete {\\n    background-color: rgb(220, 176, 176);\\n  }\\n</style>\\n"],"names":[],"mappings":"AA0VE,eAAe,eAAC,CAAC,AACf,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,KAAK,CACpB,OAAO,IAAI,CACX,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,AACrB,CAAC,AASD,OAAO,eAAC,CAAC,AACP,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC"}'};const i=e.create_ssr_component(((i,t,o,s)=>{let r,d;d=e.subscribe(n.session,(e=>r=e)),n.session.subscribe((e=>r=e));let{id:c}=t,u=r.configuration;console.log(u),console.log(c);let p=u.views[c];const v=r.constants.KE_PID,m=Object.keys(v);return function(){for(;3!=p.gauges.length;)p.gauges.push({module:"",themeConfig:"",unit:"",path:"",pid:""})}(),void 0===t.id&&o.id&&void 0!==c&&o.id(c),i.css.add(l),d(),`<div class="col-sm-12 col-sm-8 pb-4">${p?`<div id="edit-container" class="container"><div class="col-sm-12 order-sm-1"><h4 class="mb-3">Editing view #${e.escape(c)}</h4>\n      <form class="needs-validation"><input type="hidden" value="<%$id%>" name="id">\n\n          <h4>Basics</h4>\n          <hr>\n\n        <div class="basicsContainer svelte-19k1p7q"><div class="row"><div class="col-12"><label for="name">View name</label>\n              <input name="name" type="text" class="form-control" id="name" placeholder="" required${e.add_attribute("value",p.name,1)}></div>\n\n            <div class="col-6"><label for="background">Background</label>\n              <select name="background" class="custom-select form-control d-block w-100" id="country" required${e.add_attribute("value",p.background,1)}><option value="">-</option>${e.each(["banner1.jpg","bg.jpg","BlackBackground.png","CarbonFiber.png"],(n=>`<option${e.add_attribute("value",n,0)}>${e.escape(n)}</option>`))}</select></div>\n\n            <div class="col-6"><label for="theme">Theme</label>\n              <select name="theme" class="form-control d-block w-100" id="theme" required${e.add_attribute("value",p.theme,1)}><option value="">-</option>${e.each(["Stock"],(n=>`<option${e.add_attribute("value",n,0)}>${e.escape(n)}</option>`))}</select></div>\n\n            <div class="col-12"><label for="theme">Vehicle Parameters</label>\n              <div class="input-group">${e.each(Array(3),((n,a)=>`<div class="col-4 pl-1 pr-1"><div class="col-12"><select name="${"pid"+e.escape(c)}" class="mb-2 form-control" id="${"pid"+e.escape(c)}"${e.add_attribute("value",p.gauges[a].pid,1)}><option value="">-</option>${e.each(m,(n=>`<option${e.add_attribute("value",n,0)}>${e.escape(v[n].shortName?v[n].shortName:v[n].name)}\n                          </option>`))}</select></div>\n\n                    \n                    <div class="col-12"><select name="units"${e.add_attribute("value",p.gauges[a].unit,0)} class="form-control"></select></div>\n                  </div>`))}</div></div></div></div>\n        \n\n        <h4>Alerts</h4>\n        <hr>\n\n        <div class="alertsContainer svelte-19k1p7q">${e.each(p.alerts,((n,a)=>`<div class="alertContainer svelte-19k1p7q"><div class="input-group"><div class="col-sm-6 col-12 pl-1 pr-1"><label class="label" for="alertMessage">Message</label>\n                  <input required class="value form-control" type="text" name="alertMessage"${e.add_attribute("value",n.message,1)}></div>\n\n                <div class="col-sm-3 col-12 pl-1 pr-1"><label class="label" for="alertValue">Value</label>\n                  <input required class="form-control" type="text" name="alertValue"${e.add_attribute("value",n.value,1)}></div>\n\n                <div class="col-sm-3 col-12 pl-1 pr-1"><label for="alertOP">OP</label>\n                  <select required name="alertOP" class="form-control"${e.add_attribute("value",n.op,1)}><option value="">-</option>${e.each(["=",">","<",">=","<="],(n=>`<option${e.add_attribute("value",n,0)}>${e.escape(n)}\n                    </option>`))}</select></div>\n\n                <div class="col-sm-6 col-12 pl-1 pr-1"><label class="label" for="alertPID">PID</label>\n\n                  <select name="${"pid"+e.escape(c)}" class="value form-control pl-1 pr-1" id="alertPID" required${e.add_attribute("value",n.pid,1)}><option value="">-</option>${e.each(m,(n=>`<option${e.add_attribute("value",n,0)}>${e.escape(n?v[n].shortName?v[n].shortName:v[n].name:"")}\n                      </option>`))}</select></div>\n\n                <div class="col-sm-3 col-12 pl-1 pr-1"><label class="label" for="alertUnit">Unit</label>\n                  <select name="units"${e.add_attribute("value",n.unit,0)} class="form-control value" required><option value="-">-</option></select></div>\n\n                <div class="col-sm-3 col-12 pl-1 pr-1"><label class="label" for="alertPriority">Priority</label>\n                  <input required class="value form-control" type="number" name="alertPriority"${e.add_attribute("value",n.priority,1)}>\n                </div></div>\n\n              <div class="mt-2 text-center"><button class="form-control delete svelte-19k1p7q" type="button">Delete</button></div>\n            </div>`))}\n\n          <div class="col-sm-12 col-auto"><button class="form-control">New alert</button></div></div>\n        \n\n        <h4>Dynamic</h4>\n        <hr>\n\n        <div class="dynamicContainer svelte-19k1p7q"><div class="row"><div class="col-sm-3 col-12">${e.validate_component(a.Slider||e.missing_component,"svelte:component").$$render(i,{callback:function(){p.dynamic.enabled=!p.dynamic.enabled},callbackArgs:null,checked:p.dynamic.enabled},{},{})}</div></div>\n          <div class="row"><div class="col-sm-3 col-12"><label for="dynamicPID">PID</label>\n\n              <select ${p.dynamic.enabled?"":"disabled"} name="${"pid"+e.escape(c)}" class="form-control" id="dynamicPID" required${e.add_attribute("value",p.dynamic.pid,1)}><option value="">-</option>${e.each(m,(n=>`<option${e.add_attribute("value",n,0)}>${e.escape(v[n].shortName?v[n].shortName:v[n].name)}\n                  </option>`))}</select></div>\n\n            <div class="col-sm-3 col-12"><label class="label" for="dynamicUnit">Unit</label>\n              <select name="units" ${p.dynamic.enabled?"":"disabled"}${e.add_attribute("value",p.dynamic.unit,0)} class="form-control value" required><option value="-">-</option></select></div>\n\n            <div class="col-sm-3 col-12"><label for="dynamicValue">Value</label>\n              <input ${p.dynamic.enabled?"":"disabled"} class="form-control" type="text" name="dynamicValue"${e.add_attribute("value",p.dynamic.value,1)}></div>\n\n            <div class="col-sm-3 col-12"><label for="dynamicOP">OP</label>\n              <select name="dynamicOP" ${p.dynamic.enabled?"":"disabled"} class="form-control"${e.add_attribute("value",p.dynamic.op,1)}><option value="">-</option>${e.each(["=",">","<",">=","<="],(n=>`<option${e.add_attribute("value",n,0)}>${e.escape(n)}\n                  </option>`))}</select></div>\n\n            <div class="col-sm-3 col-12"><label for="dynamicPriority">Priority</label>\n              <input ${p.dynamic.enabled?"":"disabled"} class="form-control" type="number" name="dynamicPriority"${e.add_attribute("value",p.dynamic.priority,1)}></div></div></div>\n\n        <hr class="mb-4">\n        <button class="btn btn-primary btn-lg btn-block" type="submit">Update</button></form></div></div>`:""}\n</div>`}));exports.default=i,exports.preload=async function({params:e,query:n}){return console.log("params"+n),{id:e.slug}};
//# sourceMappingURL=[slug].svelte.js.map
